server.port=12023

# retry
resilience4j.retry.instances.retry1.max-attempts=5
resilience4j.retry.instances.retry1.wait-duration=1s
resilience4j.retry.instances.retry1.retry-exceptions=java.lang.Throwable
resilience4j.retry.instances.retry1.enable-exponential-backoff=true
resilience4j.retry.instances.retry1.exponential-backoff-multiplier=2

#rate-limiter
resilience4j.ratelimiter.instances.ratelimiter1.limit-for-period=4
resilience4j.ratelimiter.instances.ratelimiter1.limit-refresh-period=2s

#time-limiter
resilience4j.timelimiter.instances.timelimiter1.timeout-duration=3s
resilience4j.timelimiter.instances.timelimiter1.cancel-running-future=true

#circuit-breaker
# CLOSED -- threshold --> OPEN 
resilience4j.circuitbreaker.instances.cb1.failure-rate-threshold=20
resilience4j.circuitbreaker.instances.cb1.ignore-exceptions=java.lang.RuntimeException
# OPEN -- after 3s --> HALF-OPEN
resilience4j.circuitbreaker.instances.cb1.wait-duration-in-open-state=3s
# HALF-OPEN -- more than 5 call is successful --> CLOSED
# HALF-OPEN -- more than 4 call has failed    --> OPEN
resilience4j.circuitbreaker.instances.cb1.permitted-number-of-calls-in-half-open-state=10
resilience4j.circuitbreaker.instances.cb1.minimum-number-of-calls=6
resilience4j.circuitbreaker.instances.cb1.max-wait-duration-in-half-open-state=5s
resilience4j.circuitbreaker.instances.cb1.register-health-indicator=true